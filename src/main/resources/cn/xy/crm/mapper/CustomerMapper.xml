<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xy.crm.mapper.CustomerMapper">
    <resultMap id="BaseResultMap" type="cn.xy.crm.domain.Customer">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="gender" property="gender" jdbcType="BIT"/>
        <result column="tel" property="tel" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="qq" property="qq" jdbcType="VARCHAR"/>
        <result column="wechat" property="wechat" jdbcType="VARCHAR"/>
        <result column="job" property="job" jdbcType="VARCHAR"/>
        <result column="salaryLevel" property="salarylevel" jdbcType="VARCHAR"/>
        <result column="customerSource" property="customersource" jdbcType="VARCHAR"/>
        <result column="inputTime" property="inputtime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="becomeTime" property="becometime" jdbcType="TIMESTAMP"/>
        <association property="inputuser" javaType="cn.xy.crm.domain.Employee" columnPrefix="input_">
            <id column="id" property="id"/>
            <result column="name" property="username"/>
        </association>
        <association property="inchargeuser" javaType="cn.xy.crm.domain.Employee" columnPrefix="inchart_">
            <id column="id" property="id"/>
            <result column="name" property="username"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from customer
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="cn.xy.crm.domain.Customer" useGeneratedKeys="true" keyProperty="id">
    insert into customer (name, age, gender, 
      tel, email, qq, wechat, 
      job, salaryLevel, customerSource, 
      inputTime, status, becomeTime, 
      inputUser_id, inChargeUser_id)
    values (#{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{gender,jdbcType=BIT}, 
      #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, 
      #{job,jdbcType=VARCHAR}, #{salarylevel,jdbcType=VARCHAR}, #{customersource,jdbcType=VARCHAR}, 
      #{inputtime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{becometime,jdbcType=TIMESTAMP}, 
      #{inputuser.id,jdbcType=BIGINT}, #{inchargeuser.id,jdbcType=BIGINT})
  </insert>
    <update id="updateByPrimaryKey" parameterType="cn.xy.crm.domain.Customer">
    update customer
    set name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      gender = #{gender,jdbcType=BIT},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      salaryLevel = #{salarylevel,jdbcType=VARCHAR},
      customerSource = #{customersource,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      becomeTime = #{becometime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <update id="updateByChargeId">
        update customer set inChargeUser_id = #{inchargeId} where id =#{id} ;
    </update>

    <update id="updateStatusFalseById">
        update customer set status = -1 where id =#{id}
    </update>

    <update id="updateStatusSuccessById">
        update customer set status = 1 where id =#{id}
    </update>

    <update id="customerAdmit">
        update customer set status = 1 ,inChargeUser_id=#{inchargeId} where id =#{id}
    </update>

    <update id="moveToResourcePool">
        update customer set status = 2 ,inChargeUser_id=#{inchargeId} where id =#{id}
    </update>

    <update id="lostCustomer">
        update customer set status = -2 ,inChargeUser_id=#{inchargeId} where id =#{id}
    </update>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select <include refid="fieldSql"/>
    from customer c
        left join employee input on c.inputUser_id = input.id
        left join employee inchart on c.inChargeUser_id = inchart.id
    where c.id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, name, age, gender, tel, email, qq, wechat, job, salaryLevel, customerSource, 
    inputTime, status, becomeTime, inputUser_id, inChargeUser_id
    from customer
  </select>

    <select id="listAllFormalCustomer" resultMap="BaseResultMap">
        select
        <include refid="fieldSql"/>
        from customer c
        left join employee input on c.inputUser_id = input.id
        left join employee inchart on c.inChargeUser_id = inchart.id
        where c.status = 1
        <if test="userId != null">
            AND c.inChargeUser_id =#{userId}
        </if>
    </select>


    <sql id="fieldSql">
        c.id, c.name, c.age, c.gender, c.tel, c.email, c.qq, c.wechat, c.job, c.salaryLevel, c.customerSource,
        c.inputTime, c.status, c.becomeTime, c.inputUser_id, c.inChargeUser_id,
        input.id as input_id, input.username as input_name,
        inchart.id as inchart_id,inchart.username as inchart_name
    </sql>

    <select id="selectByinChargeId" resultMap="BaseResultMap">
        select
        <include refid="fieldSql"/>
        from customer c
        left join employee input on c.inputUser_id = input.id
        left join employee inchart on c.inChargeUser_id = inchart.id
        <where>
            <if test="userId != null">
                AND inChargeUser_id =#{userId}
            </if>
        </where>
    </select>

    <sql id="conditionSql">
        <if test="keyword != null">
            AND (c.name like concat('%',#{keyword},'%') OR c.tel like concat('%',#{keyword},'%'))
        </if>
        <if test="status !=null">
            AND c.status = #{status}
        </if>
    </sql>

    <select id="queryByConditionCount" resultType="long">
        select count(*) from customer c
        left join employee input on c.inputUser_id = input.id
        left join employee inchart on c.inChargeUser_id = inchart.id
        <where>
            <if test="userId != null">
                AND inChargeUser_id =#{userId}
            </if>
            <if test="status == null">
                AND c.status = 0
            </if>
        </where>
    </select>

    <select id="queryByCondition" resultMap="BaseResultMap">
        select
        <include refid="fieldSql"/>
        from customer c
        left join employee input on c.inputUser_id = input.id
        left join employee inchart on c.inChargeUser_id = inchart.id
        <where>
            <if test="userId != null">
                AND inChargeUser_id =#{userId}
            </if>
            <if test="status == null">
                AND c.status = 0
            </if>
            <include refid="conditionSql"/>
            order by c.inputTime DESC
            <if test="page !=null">
                limit #{start},#{rows}
            </if>
        </where>

    </select>
    <select id="queryCustomerByConditionCount" resultType="long">
        select count(*) from customer c
        left join employee input on c.inputUser_id = input.id
        left join employee inchart on c.inChargeUser_id = inchart.id
        <where>
            <if test="userId != null">
                AND inChargeUser_id =#{userId}
            </if>
            <if test="status == null">
                AND c.status = 1
            </if>
        </where>
    </select>

    <select id="queryCustomerByCondition" resultMap="BaseResultMap">
        select
        <include refid="fieldSql"/>
        from customer c
        left join employee input on c.inputUser_id = input.id
        left join employee inchart on c.inChargeUser_id = inchart.id
        <where>
            <if test="userId != null">
                AND inChargeUser_id =#{userId}
            </if>
            <if test="status ==null">
                AND c.status = 1
            </if>
            <include refid="conditionSql"/>
            order by c.inputTime DESC
            <if test="page !=null">
                limit #{start},#{rows}
            </if>
        </where>

    </select>

    <select id="queryResourcePoolByConditionCount" resultType="long">
        select count(*) from customer c
        left join employee input on c.inputUser_id = input.id
        left join employee inchart on c.inChargeUser_id = inchart.id
        <where>
            <if test="userId != null">
                AND inChargeUser_id =#{userId}
            </if>
            <if test="status == null">
                AND c.status = 2
            </if>
        </where>
    </select>
    <select id="queryResourcePoolByCondition" resultMap="BaseResultMap">
        select
        <include refid="fieldSql"/>
        from customer c
        left join employee input on c.inputUser_id = input.id
        left join employee inchart on c.inChargeUser_id = inchart.id

        <where>
            <if test="userId != null">
                AND inChargeUser_id =#{userId}
            </if>
            <if test="status ==null">
                AND c.status = 2
            </if>
            <include refid="conditionSql"/>
            order by c.inputTime DESC
            <if test="page !=null">
                limit #{start},#{rows}
            </if>
        </where>
    </select>
    <select id="selectAllCount" resultType="long">
      select count(*) from customer c
        left join employee input on c.inputUser_id = input.id
        left join employee inchart on c.inChargeUser_id = inchart.id
    </select>

</mapper>