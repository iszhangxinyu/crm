<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xy.crm.mapper.CustomerTransferMapper">
    <resultMap id="BaseResultMap" type="cn.xy.crm.domain.CustomerTransfer">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="transReason" property="transreason" jdbcType="VARCHAR"/>
        <result column="transTime" property="transtime" jdbcType="TIMESTAMP"/>
        <association property="transuser" javaType="Employee" columnPrefix="opuser_">
            <id column="id" property="id"/>
            <result column="name" property="username"/>
        </association>
        <association column="customer_id" property="customer" javaType="cn.xy.crm.domain.Customer"
                     columnPrefix="c_">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>
        <association property="oldseller" javaType="Employee" columnPrefix="old_">
            <id column="id" property="id"/>
            <result column="username" property="username"/>
        </association>
        <association property="newseller" javaType="Employee" columnPrefix="new_">
            <id column="id" property="id"/>
            <result column="username" property="username"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from customertransfer
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="cn.xy.crm.domain.CustomerTransfer" useGeneratedKeys="true" keyProperty="id">
    insert into customertransfer (customer_id, transUser_id, transTime, 
      oldSeller_id, newSeller_id, transReason
      )
    values (#{customer.id,jdbcType=BIGINT}, #{transuser.id,jdbcType=BIGINT}, #{transtime,jdbcType=TIMESTAMP},
      #{oldseller.id,jdbcType=BIGINT}, #{newseller.id,jdbcType=BIGINT}, #{transreason,jdbcType=VARCHAR}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="cn.xy.crm.domain.CustomerTransfer">
    update customertransfer
    set customer_id = #{customer.id,jdbcType=BIGINT},
      transUser_id = #{transuser.id,jdbcType=BIGINT},
      transTime = #{transtime,jdbcType=TIMESTAMP},
      oldSeller_id = #{oldseller.id,jdbcType=BIGINT},
      newSeller_id = #{newseller.id,jdbcType=BIGINT},
      transReason = #{transreason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <sql id="fieldSql">
          tran.id,  tran.transTime,tran.transReason,
          c.id as c_id,c.name as c_name,
          opuser.id as opuser_id, opuser.username as opuser_name,
          old.id as old_id, old.username as old_username,
          new.id as new_id,new.username as new_username
    </sql>

    <sql id="conditionSql">
        <where>
            <if test="keyword !=null">
                AND c.name like concat('%',#{keyword},'%')
            </if>
            <if test="beginDate != null">
                AND tran.transTime &gt;= #{beginDate}
            </if>
            <if test="endDate !=null">
                AND tran.transTime &lt;= #{endDate}
            </if>
        </where>
    </sql>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="fieldSql"/>
        from customertransfer tran
        LEFT JOIN customer c on tran.customer_id = c.id
        LEFT JOIN employee opuser on tran.transUser_id = opuser.id
        LEFT JOIN employee old on tran.oldSeller_id = old.id
        LEFT JOIN employee new on tran.newSeller_id = new.id
        where tran.id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="fieldSql"/>
        from customertransfer tran
        LEFT JOIN customer c on tran.customer_id = c.id
        LEFT JOIN employee opuser on tran.transUser_id = opuser.id
        LEFT JOIN employee old on tran.oldSeller_id = old.id
        LEFT JOIN employee new on tran.newSeller_id = new.id
    </select>

    <select id="queryByConditonCount" resultType="long">
        select
        count(*)
        from customertransfer tran
        LEFT JOIN customer c on tran.customer_id = c.id
        LEFT JOIN employee opuser on tran.transUser_id = opuser.id
        LEFT JOIN employee old on tran.oldSeller_id = old.id
        LEFT JOIN employee new on tran.newSeller_id = new.id
        <include refid="conditionSql"/>
        <if test="page != null">
            limit #{start},#{rows}
        </if>
    </select>
    <select id="queryByCondition" resultMap="BaseResultMap">
        select
        <include refid="fieldSql"/>
        from customertransfer tran
        LEFT JOIN customer c on tran.customer_id = c.id
        LEFT JOIN employee opuser on tran.transUser_id = opuser.id
        LEFT JOIN employee old on tran.oldSeller_id = old.id
        LEFT JOIN employee new on tran.newSeller_id = new.id
        <include refid="conditionSql"/>
        <if test="page != null">
            limit #{start},#{rows}
        </if>
    </select>

</mapper>